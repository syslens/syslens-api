# SysLens主控端配置
# 运行环境，可选值: development(dev)或production(prod)
env: "dev"

# 服务器配置
server:
  # HTTP服务监听地址
  http_addr: "0.0.0.0:8080"
  # 是否启用HTTPS
  use_https: false
  # HTTPS证书配置(如果use_https为true)
  cert_file: "certs/server.crt"
  key_file: "certs/server.key"

# 数据安全配置
security:
  # 认证令牌配置
  auth_token: "${SYSLENS_AUTH_TOKEN:-default_control_plane_token}"
  # 数据传输加密
  encryption:
    # 是否启用加密
    enabled: true
    # 加密算法(目前支持aes-256-gcm)
    algorithm: "aes-256-gcm"
    # 加密密钥(32字节，较短会自动填充，较长会截断)
    key: "${ENCRYPTION_KEY:-your-encryption-key-change-in-production}"
  # 数据压缩
  compression:
    # 是否启用压缩
    enabled: true
    # 压缩算法(目前支持gzip)
    algorithm: "gzip"

# 存储配置
storage:
  # 存储类型: memory, file, influxdb
  type: "${STORAGE_TYPE:-influxdb}"
  # 内存存储配置
  memory:
    # 每个节点的最大存储条目数
    max_items: 1000
  # 文件存储配置
  file:
    # 存储目录
    data_dir: "data/metrics"
    # 文件滚动周期(小时)
    rotate_hours: 24
  # InfluxDB配置
  influxdb:
    url: "${INFLUXDB_URL:-http://localhost:8086}"
    token: "${INFLUXDB_TOKEN:-your-influxdb-token}"
    org: "${INFLUXDB_ORG:-syslens}"
    bucket: "${INFLUXDB_BUCKET:-metrics}"
    # 数据保留策略（单位天）
    retention_days: 30
  # PostgreSQL 配置 (如果 storage.type 包含 'postgres')
  postgres:
    host: ${SYSLENS_POSTGRES_HOST:-localhost}
    port: ${SYSLENS_POSTGRES_PORT:-5432}
    user: ${SYSLENS_POSTGRES_USER:-syslens_user}
    password: ${SYSLENS_POSTGRES_PASSWORD:-your_secure_password} # 强烈建议使用环境变量
    dbname: ${SYSLENS_POSTGRES_DB:-syslens}
    sslmode: ${SYSLENS_POSTGRES_SSLMODE:-disable} # 根据需要设置为 'require', 'verify-full' 等
    # 连接池设置
    max_open_conns: ${SYSLENS_POSTGRES_MAX_OPEN_CONNS:-25}
    max_idle_conns: ${SYSLENS_POSTGRES_MAX_IDLE_CONNS:-10}
    conn_max_lifetime: ${SYSLENS_POSTGRES_CONN_MAX_LIFETIME:-5m} # 例如 '5m', '1h'

# 节点管理配置
discovery:
  # 节点过期时间(秒)
  node_expiry: 300
  # 是否自动移除过期节点
  auto_remove_expired: true

# 聚合服务器配置
aggregator:
  # 聚合服务器认证令牌
  auth_token: "${SYSLENS_AGGREGATOR_AUTH_TOKEN:-default_aggregator_token}"
  # 是否启用聚合服务器功能
  enabled: true
  # 聚合服务器心跳超时时间(秒)
  heartbeat_timeout: 60
  # 聚合服务器数据上报间隔(秒)
  report_interval: 10

# 告警配置
alerting:
  # 是否启用告警
  enabled: true
  # 告警检查间隔(秒)
  check_interval: 60
  # 告警规则
  rules:
  - name: "high-cpu-usage"
    condition: "cpu.usage > 90"
    duration: "5m"
    severity: "warning"
  - name: "high-memory-usage"
    condition: "memory.used_percent > 90"
    duration: "5m"
    severity: "warning"
  - name: "high-disk-usage"
    condition: "disk./.used_percent > 90"
    duration: "5m"
    severity: "warning"
  # 通知配置
  notifiers:
    # 邮件通知
    email:
      enabled: false
      smtp_server: "smtp.example.com"
      smtp_port: 587
      username: "alerts@example.com"
      password: "your-password"
      from: "alerts@example.com"
      to: [ "admin@example.com" ]
    # Webhook通知
    webhook:
      enabled: false
      url: "https://hooks.slack.com/services/xxx/yyy/zzz"

# 日志配置
logging:
  # 日志级别: debug, info, warn, error
  level: "debug"
  # 日志文件(留空表示输出到控制台)
  file: "logs/server.log"
  # 是否开启详细模式(包含文件和行号)
  verbose: true
