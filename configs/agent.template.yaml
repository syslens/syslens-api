# SysLens节点代理配置

# 节点信息
node:
  # 节点ID(留空则自动生成)
  id: "${NODE_ID:-}"
  # 节点标签(用于分组和筛选)
  labels:
    environment: "${NODE_ENV:-production}"
    role: "${NODE_ROLE:-web}"

# 连接配置
server:
  # 主控服务器地址
  url: "${SERVER_URL:-http://localhost:8080}"
  # 是否启用TLS验证(HTTPS)
  tls_verify: true
  # 认证令牌(如果需要)
  token: "${SERVER_TOKEN:-}"
  # 连接超时(秒)
  timeout: 10
  # 重试次数
  retry_count: 3
  # 重试间隔(秒)
  retry_interval: 5

# 数据安全配置
security:
  # 数据传输加密
  encryption:
    # 是否启用加密
    enabled: true
    # 加密算法(目前支持aes-256-gcm)
    algorithm: "aes-256-gcm"
    # 加密密钥(32字节，较短会自动填充，较长会截断)
    key: "${ENCRYPTION_KEY:-your-encryption-key-change-in-production}"
  # 数据压缩
  compression:
    # 是否启用压缩
    enabled: true
    # 压缩算法(目前支持gzip)
    algorithm: "gzip"
    # 压缩级别(1-9，1最快但压缩率低，9最慢但压缩率高)
    level: 6

# 采集配置
collection:
  # 采集间隔(毫秒)
  interval: ${COLLECTION_INTERVAL:-500}
  # 开启的采集项
  enabled:
    cpu: true
    memory: true
    disk: true
    network: true
    processes: true
  # 磁盘采集配置
  disk:
    # 要监控的挂载点([]表示所有)
    mount_points: [ "/" ]
    # 是否包含不活跃的磁盘
    include_inactive: false
  # 网络采集配置
  network:
    # 要监控的接口([]表示所有)
    interfaces: []
  # 进程采集配置
  process:
    # 是否收集所有进程信息
    collect_all: false
    # 要监控的特定进程名称
    target_processes: [ "nginx", "mysql", "redis-server" ]
    # 最大监控进程数
    max_processes: 20

# 日志配置
logging:
  # 日志级别: debug, info, warn, error
  level: "${LOG_LEVEL:-info}"
  # 日志文件(留空表示输出到控制台)
  file: "${LOG_FILE:-logs/agent.log}"
  # 是否开启详细模式
  verbose: false
